trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'artwork-25june-2025'                   # Name of your Azure service connection
  appName: 'rts-webapp-demo'                                 # Name of your App Service
  slotName: 'qa'                                             # Deployment slot name
  resourceGroup: 'Real-Time-Sales-Reporting-DEV-RG'           # Azure Resource Group
  artifactName: 'drop'

steps:

# Install Maven and build the project
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean package'
    options: '-Dmaven.test.skip=true'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    publishJUnitResults: false

# Copy the WAR or JAR file to another location (e.g., to a folder for artifact storage or deployment)
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)/target'
    Contents: '**/*.jar'  # or '**/*.war' depending on your build output
    TargetFolder: '$(Build.ArtifactStagingDirectory)/target'

# Publish the WAR or JAR as an artifact (optional, good for multi-stage)
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(System.DefaultWorkingDirectory)/target'
    artifactName: '$(artifactName)'

# Deploy to Azure App Service Slot
- task: AzureWebApp@1
  inputs:
    azureSubscription: '$(azureSubscription)'
    appType: 'webAppLinux'
    appName: '$(appName)'
    deployToSlotOrASE: true
    resourceGroupName: '$(resourceGroup)'
    slotName: '$(slotName)'
    package: '$(System.DefaultWorkingDirectory)/target/*.jar'
    configurationStrings: |
      startupCommand=java -jar /home/site/wwwroot/*.jar

